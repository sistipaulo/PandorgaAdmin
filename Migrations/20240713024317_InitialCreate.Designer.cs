// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pandorga_Admin.Data;

#nullable disable

namespace Pandorga_Admin.Migrations
{
    [DbContext(typeof(Pandorga_AdminContext))]
    [Migration("20240713024317_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pandorga_Admin.Models.Aluno", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ContatoResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TurmaID");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Evento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.Property<int?>("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalaID");

                    b.HasIndex("TurmaID");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Professor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TurmaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TurmaID")
                        .IsUnique()
                        .HasFilter("[TurmaID] IS NOT NULL");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Turma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("NomeTurma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorID")
                        .HasColumnType("int");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProfessorID");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Aluno", b =>
                {
                    b.HasOne("Pandorga_Admin.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaID");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Evento", b =>
                {
                    b.HasOne("Pandorga_Admin.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaID");

                    b.HasOne("Pandorga_Admin.Models.Turma", "Turma")
                        .WithMany("Eventos")
                        .HasForeignKey("TurmaID");

                    b.Navigation("Sala");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Sala", b =>
                {
                    b.HasOne("Pandorga_Admin.Models.Turma", "Turma")
                        .WithOne("Sala")
                        .HasForeignKey("Pandorga_Admin.Models.Sala", "TurmaID");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Turma", b =>
                {
                    b.HasOne("Pandorga_Admin.Models.Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Professor", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("Pandorga_Admin.Models.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Eventos");

                    b.Navigation("Sala")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
